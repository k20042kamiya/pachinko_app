{"ast":null,"code":"var _jsxFileName = \"/Users/k20042kk/Dvelopment/pachinko_app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [startText, setstartText] = useState(\"\");\n  const [rotateText, setrotateText] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [resultborder, setResultborder] = useState(\"\");\n  const [invText, setinvText] = useState(\"1\");\n  const [borderText, setborderText] = useState(\"\");\n  const [buttonDisabled, setEbuttonDisabled] = useState(false);\n\n  const onclickStart = () => {\n    const calc = Number((rotateText - startText) / invText);\n    let b = Number(calc - borderText);\n\n    if (0 < b) {\n      b = `+${b}`;\n    }\n\n    if (!calc) {\n      setResult(\"半角英数で入力してください\");\n      setinvText(invText);\n    } else {\n      setResult(`1k ${calc} 回転`);\n      setinvText(Number(invText) + 1);\n\n      if (b) {\n        setResultborder(`ボーダー:${b}`);\n      }\n    }\n\n    setEbuttonDisabled(false);\n    setrotateText(\"\");\n  };\n\n  const handleBlur = () => {\n    const start = startText;\n    const rotate = rotateText;\n    const inv = invText;\n\n    if (!start || !rotate || !inv) {\n      setEbuttonDisabled(false);\n    } else {\n      setEbuttonDisabled(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u30B9\\u30BF\\u30FC\\u30C8\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setstartText(e.target.value),\n        value: startText,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), \"1K\\u5F8C\\u56DE\\u8EE2\\u6570\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setrotateText(e.target.value),\n        value: rotateText,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this), \"\\u6295\\u8CC7\\u91D1\\u984D\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setinvText(e.target.value),\n        value: invText,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), \"\\u30DC\\u30FC\\u30C0\\u30FC\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setborderText(e.target.value),\n        value: borderText,\n        onBlur: handleBlur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onclickStart,\n      disabled: !buttonDisabled,\n      onBlur: handleBlur,\n      children: \"\\u56DE\\u8EE2\\u6570\\u8A08\\u7B97\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: resultborder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"lmAjpW8YwbvtRN3h7zYsWe5RGb4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/k20042kk/Dvelopment/pachinko_app/src/App.js"],"names":["React","useState","App","startText","setstartText","rotateText","setrotateText","result","setResult","resultborder","setResultborder","invText","setinvText","borderText","setborderText","buttonDisabled","setEbuttonDisabled","onclickStart","calc","Number","b","handleBlur","start","rotate","inv","e","target","value"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [startText, setstartText] = useState(\"\");\n  const [rotateText, setrotateText] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [resultborder,setResultborder] = useState(\"\");\n  const [invText, setinvText] = useState(\"1\");\n   const [borderText, setborderText] = useState(\"\");\n  const [buttonDisabled, setEbuttonDisabled] = useState(false);\n  const onclickStart = () => {\n    const calc = Number((rotateText - startText) / invText);\n    let b = Number(calc - borderText)\n    if (0 < b) {\n      b = `+${b}`\n    }\n    if (!calc) {\n      setResult(\"半角英数で入力してください\");\n      setinvText(invText)\n    }\n    else{\n      setResult(`1k ${calc} 回転`);\n      setinvText(Number(invText) + 1)\n      if (b) {\n        setResultborder(`ボーダー:${b}`)\n      }\n    }\n    setEbuttonDisabled(false)\n    setrotateText(\"\");\n    \n\n  }\n\n  const handleBlur = () => {\n    const start = startText;\n    const rotate = rotateText;\n    const inv = invText;\n    if (!start || !rotate || ! inv) {\n      setEbuttonDisabled(false)\n    }\n    else {\n      setEbuttonDisabled(true)\n    }\n  }\n\n  return (\n    <>\n    <div>\n        スタート<input type=\"text\"\n          onChange={(e) => setstartText(e.target.value)}\n          value={startText}\n          onBlur={handleBlur}\n        />\n        1K後回転数<input type=\"text\"\n          onChange={(e) => setrotateText(e.target.value)}\n          value={rotateText}\n          onBlur={handleBlur}\n        />\n        投資金額<input type=\"text\"\n          onChange={(e) => setinvText(e.target.value)}\n          value={invText}\n          onBlur={handleBlur}\n        />\n        ボーダー<input type=\"text\"\n          onChange={(e) => setborderText(e.target.value)}\n          value={borderText}\n          onBlur={handleBlur}\n        />\n      </div>\n      <button type=\"button\"\n        onClick={onclickStart}\n        disabled={!buttonDisabled}\n        onBlur={handleBlur}>回転数計算</button>\n      <p>{result}</p>\n      <p>{resultborder}</p>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}